{"name":"AndroDialogs","tagline":"Standard Dialogs and dialog-templates using DialogFragments","body":"# AndroDialogs\r\n\r\n## Synopsys\r\n*AndroDialogs* is a library providing easy to use standard dialogs and\r\ndialog-templates using DialogFragments.\r\nIt's goal is to make use of dialogs as simple as possible. By using\r\nDialogFragments, it is ensured that the handling of the dialogs themselves\r\nis properly done by the Android System. This means that certain side-effects\r\nlike leaked activities are less likely to happen than it was before the\r\nintroduction of the DialogFragments.\r\n\r\n## Prebuilt Version\r\n*AndroDialogs* is available via Maven Central. You can use it no matter\r\nif you use maven, gradle or ant/ivy. Simply add it as a dependency into\r\nyou build-system's files.\r\n\r\nSimply use these values:\r\n\r\n* **Group-ID**: de.dimensionv\r\n* **Artifact-ID**: androDialogs-nativelibs or androDialogs-supportlibs\r\n* **Classifier**: nativelibsRelease or supportLibsRelease\r\n* **Version**: 1.0.0-196 (You may want to check for the latest version in the repo itself...)\r\n* **Packaging**: aar\r\n\r\nFor gradle, this would look like\r\n\r\n```\r\ncompile 'de.dimensionv:androDialogs-nativelibs:1.0.0-196:nativelibsRelease@aar'\r\n```\r\nfor the nativelibs flavor, and like\r\n\r\n```\r\ncompile 'de.dimensionv:androDialogs-supportlibs:1.0.0-196:supportlibsRelease@aar'\r\n```\r\nfor the supportlibs flavor.\r\n\r\n\r\nFor maven, this would look like\r\n\r\n```\r\n<dependency>\r\n  <groupId>de.dimensionv</groupId>\r\n  <artifactId>androDialogs-nativelibs</artifactId>\r\n  <version>1.0.0-196</version>\r\n  <classifier>nativelibsRelease</classifier>\r\n  <type>aar</type>\r\n</dependency>\r\n```\r\nfor the nativelibs flavor, and like\r\n\r\n```\r\n<dependency>\r\n  <groupId>de.dimensionv</groupId>\r\n  <artifactId>androDialogs-supportlibs</artifactId>\r\n  <version>1.0.0-196</version>\r\n  <classifier>supportlibsRelease</classifier>\r\n  <type>aar</type>\r\n</dependency>\r\n```\r\nfor the supportlibs flavor.\r\n\r\nFor other dependency management systems and/or build-systems, please refer to their respective documentations.\r\n\r\n## Wait, Dialog*Fragments*? That means API-Level 11 and above!?\r\nYes and no. This library actually comes in two flavors, and you need to decide\r\non which flavor to use.\r\n\r\n* **_Native_ Android Fragments**: this flavor only works on Android API level\r\n  11 and above. It uses the standard native Android DialogFragments\r\n* **_Support_ Android Fragments**: this flavor works on all Android API levels,\r\n  if you add the support-v4 libraries to your project.\r\n\r\n## The Dialogs provided by *AndroDialogs*\r\n### The Standard Dialogs\r\nThe *AndroDialogs* library provides a number of ready-to-use standard dialogs:\r\n\r\n* **NotificationDialogFragment**: A DialogFragment to display a simple message\r\n  or notificiation\r\n* **HintDialogFragment**: A DialogFragment to display a hint, with the option\r\n  to not display it again.\r\n* **ConfirmationDeletionDialogFragment** A DialogFragment for confirmation\r\n  questions, not just for deletion, though that's the default case.\r\n* **DatePickerDialogFragment**: A DialogFragment for selecting a date.\r\n* **TimePickerDialogFragment**: A DialogFragment for selecting a time of day.\r\n\r\n### The Dialog Templates\r\nIn addition to the ready-to-use standard dialogs, *AndroDialogs* also provides two\r\ndistinct templates that can be filled with any arbitrary layout to either display\r\ninformation (like a progress dialog), or to actualy have the user enter some data,\r\nwhich is then processed by the app.\r\n\r\n* **DisplayDialogFragment**: A Dialog without controls (i.e. no buttons), which is\r\n  intended to display messages and/or progress bars / information and which is\r\n  completely controlled by the app (hence no buttons)\r\n* **InputDialogFragment**: A DialogFragment to have the user enter arbitrary data.\r\n  The DialogFragment requires a customized layout and lets the caller control the\r\n  dialog-elements as well as which button was pressed via callbacks.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}