// $Id$

apply plugin: 'com.android.library'

def versionPropsFile = file('version.properties')

def majorVersionCode = 0
def minorVersionCode = 0
def hotfixVersionCode = 0
def buildNr = 1
def snapshotBuild = true;
def versionString

def Properties versionProps = new Properties()

def ArrayList<String> flavorList = new ArrayList<String>()

android {

  if(versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))

    majorVersionCode = versionProps['MAJOR'].toInteger()
    minorVersionCode = versionProps['MINOR'].toInteger()
    hotfixVersionCode = versionProps['HOTFIX'].toInteger()

    buildNr = versionProps['BUILD_NUMBER'].toInteger() + 1

    snapshotBuild = versionProps['SNAPSHOT_BUILD'].toBoolean()

    versionProps['BUILD_NUMBER'] = buildNr.toString()
  } else {
    versionProps['MAJOR'] = majorVersionCode.toString()
    versionProps['MINOR'] = minorVersionCode.toString()
    versionProps['HOTFIX'] = minorVersionCode.toString()
    versionProps['BUILD_NUMBER'] = buildNr.toString()
    versionProps['SNAPSHOT_BUILD'] = snapshotBuild.toString()
  }

  versionProps.store(versionPropsFile.newWriter(), null)

  versionString = String.format("%d.%d.%d-%d", majorVersionCode, minorVersionCode, hotfixVersionCode, buildNr)

  allprojects {
    version = snapshotBuild ? versionString + '-SNAPSHOT' : versionString
    ext.snapshotBuild = snapshotBuild
  }

  compileSdkVersion ANDROID_BUILD_SDK_VERSION.toInteger()
  buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

  publishNonDefault true

  defaultConfig {
    versionCode buildNr
    versionName versionString
    minSdkVersion 8
    targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION.toInteger()
  }

  buildTypes {
    release {
      minifyEnabled false
      //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      debuggable false
      jniDebuggable false
      renderscriptDebuggable false
      zipAlignEnabled true
    }
    debug {
      minifyEnabled false
      debuggable true
      versionNameSuffix '-SNAPSHOT'
      zipAlignEnabled true
    }
  }
  productFlavors {
    nativelibs {
      versionCode buildNr
      versionName versionString
      minSdkVersion 11
      targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION.toInteger()
      flavorList.add("nativelibs")
    }
    supportlibs {
      versionCode buildNr
      versionName versionString
      minSdkVersion 8
      targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION.toInteger()
      flavorList.add("supportlibs")
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_6
    targetCompatibility JavaVersion.VERSION_1_6
  }

  ext.flavors = flavorList
}

dependencies {
  compile 'de.dimensionv:androtools:2.0.0'
  supportlibsCompile 'com.android.support:support-v4:22.1.1'
}

apply from: '../mavenPush.gradle'